version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "22181:2181"
#    networks:
#      - spring-net
  kafka:
    image: confluentinc/cp-kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      #KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:9292
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:9292
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9292:9292"
#    networks:
#      - spring-net

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
      - KAFKA_CLUSTERS_0_SCHEMAREGISTRY=http://schema-registry:8081
    depends_on:
      - kafka
      - zookeeper

  # Kafka Connect UI
  kafka-connect-ui:
    image: landoop/kafka-connect-ui
    environment:
      CONNECT_URL: http://kconnect:8083 # Pointing to the Kafka Connect REST API
    ports:
      - "8000:8000"
    depends_on:
      - kafka-ui

  postgres-patient:
    image: postgres
    container_name: postgres-patient
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: patient
    ports:
      - "5432:5432"
    command: >
      postgres -c wal_level=logical
               -c max_wal_senders=4
               -c max_replication_slots=4
#    networks:
#      - spring-net

  postgres-transaction:
    image: postgres
    container_name: postgres-transaction
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: transaction
    ports:
      - "5002:5432"
    command: >
      postgres -c wal_level=logical
               -c max_wal_senders=4
               -c max_replication_slots=4
    volumes:
      - ./pgdata:/var/lib/postgresql/data
  #    networks:
  #      - spring-net

  kconnect:
    image: my-debezium-connect:2.7
    container_name: kconnect
    ports:
      - "8083:8083"
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: debezium_connect_configs
      OFFSET_STORAGE_TOPIC: debezium_connect_offsets
      STATUS_STORAGE_TOPIC: debezium_connect_status
      KEY_CONVERTER: io.confluent.connect.avro.AvroConverter #### add when add avro schema registry
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081 #### add when add avro schema registry
      VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter #### add when add avro schema registry
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081 #### add when add avro schema registry
    depends_on:
      - kafka

  schema-registry:
    image: confluentinc/cp-schema-registry:7.5.0
    container_name: schema-registry
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
      SCHEMA_REGISTRY_HOST_NAME: schema-registry

  postgres-auth:
    image: postgres
    container_name: postgres-auth
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    ports:
      - "5001:5432"
#    networks:
#      - spring-net

  patient-service:
    image: patient-service
    container_name: patient-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/patient
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      BILLING_SERVICE_ADDRESS: billing-service
      BILLING_SERVICE_GRPC_PORT: 9001
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "4000:4000"
    depends_on:
      - billing-service
      - postgres-patient
      - kafka
    networks:
      - spring-net

  api-gateway:
    image: api-gateway:latest
    ports:
      - "4004:4004"
    networks:
      - spring-net

  billing-service:
    image: billing-service
    container_name: billing-service
    ports:
      - "4001:4001"
      - "9001:9001"
    depends_on:
      - postgres-patient
    networks:
      - spring-net

  analytics-service:
    image: analytics-service
    container_name: analytics-service
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "4002:4002"
    depends_on:
      - patient-service
      - postgres-patient
      - kafka
    networks:
      - spring-net

networks:
  spring-net:
    driver: bridge
